<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script>
        console.log(9 % 2);
        console.log(3 % 5);//结果是3
        // 递增和递减必须和变量配合使用
        var num = 1;
        num = num + 1;
        num = num + 1;
        console.log(num);
        // 前置递增
        var age = 10;
        ++age; //类似等于age=age+1
        console.log(++age + 10);
        // 后置递增
        var sex = 10;
        sex++;
        console.log(sex);
        console.log();
        // 逻辑与  两侧都为true 结果是true       只要有一侧为false    结果就是false
        console.log(3 > 5 && 3 > 2);
        console.log(3 < 5 && 3 > 2);
        // 逻辑或||           两侧都是假false 结果才是false    只要一侧为true  结果就是true
        console.log(3 > 5 || 3 > 2);  //true
        console.log(3 > 5 || 3 < 2);  //false
        // 逻辑非！  not
        console.log(!true);  //false
        // 赋值
        var nnn = 10;
        //nnn *= 3;  //nnn=nnn*3
        nnn %= 3;
        console.log(nnn);

    </script>
</head>

<body>
    <!-- 运算符opertor也被称为操作符，是用于实现赋值，比较和执行运算等功能的符号 -->
    算数运算符
    + - * / % 取余数（取模） 返回除法的余数 9%2=1
    1.1表达式和返回值
    表达式是由数字，运算符，变量等以能求得数值的有意义排列方法所得的组合
    简单理解 是由数字，运算符，变量等组成的式子
    表达式都有一个结果返回给我们，叫返回值

    递增和递减运算符
    如果需要给数字变量添加或减去1 可以使用递增++和递减— —运算符来完成
    想要一个变量自己加1
    比较运算符
    != 不等于
    === ！== 等于（类型和数据都一样）
    逻辑运算符 取反符
    逻辑运算符是用来进行，布尔值 运算的运算符，其返回值也是布尔值，后面开发中，常用于多个条件的判断
    && 逻辑 与 和 一样的意思，你与我
    || 逻辑或 or
    ！ 逻辑非
    赋值运算符
    = 直接赋值
    += -= 加减一个数 后再赋值
    *= /= 乘除， %=取模后再赋值
     运算符优先级
     小括号
     一元运算符       ++ -- ！这个是逻辑非
     算数运算符       先乘除后加减
     关系运算符        > >=  <   <=
     相等运算符          ==  !=  === !==
     逻辑运算符          先逻辑与&&后逻辑或||
     赋值运算符          =
     逗号运算符          ，
     一元运算符里面逻辑非优先级很高
     逻辑与比逻辑或优先级高
</body>

</html>