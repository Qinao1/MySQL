<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
     <!-- 注册事件概述
     给元素添加事件   称为注册事假  或者绑定事件
     注册事件有两种方式    传统方式 和方法监听注册方式 -->
     <!-- 传统注册事件
     利用on开头的事件  onclick
     特点 ，注册事件的唯一性   ：同一个元素  同一个事件  只能设置一个处理函数  最后注册的处理函数将会覆盖前面注册的处理函数 -->
     <button>传统注册事件</button>
     <button>方法监听注册事件</button>
     <button>ie9以前的版本</button>
     <script>
        var btns=document.querySelectorAll('button');
        //传统方式注册事件
        btns[0].onclick=function(){
            alert('21');
        }
        btns[0].onclick=function(){
            alert('22');
        }
        // 2方法监听注册方式、addEventlistener（）它是一个方法  特点 同一个元素同一个事件可以注册多个监听器  按注册顺序依次执行
        // add添加  event 事件 listener听
        // （type，listener[,useCapture])
        // 该方法接收3个参数
        // type    事件类型字符串  比如click  onmouseover  注意这里不要带on
        // listener     事假处理函数  事假发生时   会调用该监听函数
        // useCpature    可选参数    是一个布尔值   默认是flas  学完dom事件流后 再学习
        //事假侦听注册事件    addEventlistener 
        //  里面的事假类型是字符串   必定加引号  而且不带on
        //  同一个元素   事假 可以添加多个侦听器（事件处理程序）
        btns[1].addEventListener('click',function(){
            alert('23');
        });
        btns[1].addEventListener('click',function(){
            alert('77');
        });
        // attachEvent   ie9以前的版本
       
     </script>
</body>
</html>