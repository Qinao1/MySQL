<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="../20jQuery/jquery.min.js"></script>
</head>

<body>
    <!--  
    selector 选择器  
    语法                  用法                             说明
    parent()             $("li").parent();                查找父级
    children(selector)   $("ul").children("1i")           相当于$("u>li")，最近一级(亲儿子)
    find(selector)       $("u1").find("1i");              相当于$("ul li）,后代选择器
    siblings(selector)   $(".first").siblings("li");      查找兄弟节点，不包括自己本身
    nextA11([expr])      $(".first").nextAll()            查找当前元素之后所有的同辈元素
    prevtA1l([expr))     $(".last").prevA11()             查找当前元素之前所有的同辈元素
    hasClass(class)      $('div').hasClass("protected")   检查当前的元素是否含有某个特定的类，如果有，则返回true
    eq(index)            $("li").eq(2);                   相当于$("li:eq(2)"), index从0开始
     -->
    <div class="yeye">
        <div class="father">
            <div class="son">儿子</div>
        </div>
    </div>
    <div class="nav">
        <p>我是批</p>
        <div>
            <p>我是p</p>
        </div>
    </div>
    <script>
        // 注意方法都是带括号
        $(function () {
            // 1父 parent()  返回的是  最近一级的父级元素  亲爸爸
            console.log($(".son").parent());
            // 2子
            // (1) 类似子代选择器  children()  ul>li
            // $(".nav").children("p").css("color","red");
            // (2)类似后代选择器 可以选里面所有的孩子 包括 儿子孙子 find（） ul li
            $(".nav").find("p").css("color","pink");
        })
    </script>
</body>

</html>