<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>初识vue</title>
    <!-- //引入vue -->
    <script src="../js/vue.js"></script>
</head>


<body>
    <!-- 初始vue
    1想让vue工作 就必须创建一个vue实例  且要传入一个配置对象
    2root容器里的代码 依然符合html规范  只不过混入了一些特殊的语法
    3root容器里的代码被称为 VUE模板 
    4Vue实例和容器 是一一对应的
    5真实开发中 只有一个vue实例 并且会配合着组件使用
    6{{xxx}}中的xxx 要写js表达式 且xxx可以自动读取到data中的所有属性
   7 一旦data中的数据发生改变  那么模板（页面）中用到该数据的地方 也会自动更新
    注意区分js表达式 和js代码（语句）
          1表达式： 一个表达式会生成一个值  可以放在任何一个需要值的地方
               (1)a
               (2)a+b
               (3)demo(1)
               (4)x=== y? 'a'：'b'
        2js代码(语句)
        if (){}
        for (){}
           -->
    <!-- 准备好一个容器 -->
    <div id="demo">
        <h1>hello,{{name.toUpperCase()}},{{address}}</h1>
    </div>

    <script>
        // Vue.config.productionTip = false;// 阻止 vue 在启动时生成生产提示。
        // 创建vue实例
         Vue({
            el: '#demo',  //el 用于指定 当前vue实例为哪个容器服务 值通常为css选择器字符串
            data: {//data中用于储存数据   数据供el所指定的容器去使用  值我们暂时先写成一个对象
                name: 'sdsa',
                address: '上海'
            }
        }); //只传一个参数 对象


    </script>
</body>

</html>