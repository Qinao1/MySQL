<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    迭代（遍历）方法：forEach() map() filter() some() every()

    forEach()
    array.forEach(fucution(currentValue,index,arr))
    currentValue 数组当前项的值
    index 数组当前项的索引
    arr 数组对象本身

    filter() filter翻译过来是过滤器的意思
    array.filter(fucution(currentValue,index,arr))
    filter()方法创建一个新数组 新数组中的元素是通过检查指定数组中符合条件的所有元素 主要用于筛选数组
    注意它直接返回一个新数组
    currentValue 数组当前项的值
    index 数组当前项的索引
    arr 数组对象本身

    some()
    array.some(fucution(currentValue,index,arr))
    some()方法 用于检测数组中的元素 是否，满足指定条件 通俗点 查找数组中否有满足条件的元素
    注意如果它返回值是布尔值 如果找到这个元素就返回true 如果查找不到就返回false
    如果找到第一个满足条件的元素，则终止循环 不再继续查找
    currentValue 数组当前项的值
    index 数组当前项的索引
    arr 数组对象本身

    map()
    array.map(function(currentValue,index,arr), thisValue)
    map() 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。
    map() 方法按照原始数组元素顺序依次处理元素。
    注意： map() 不会对空数组进行检测。
    注意： map() 不会改变原始数组。
    currentValue 数组当前项的值
    index 数组当前项的索引
    arr 数组对象本身
    <script>
        // forEach迭代(遍历)数组
        var arr = [1, 2, 3];
        var sum = 0
        var newArray1 = arr.forEach(function (value, index, array) {
            // console.log('每一个数组元素'+value);
            // console.log('每一个数组元素的索引号'+index);
            // console.log('数组本身'+array);
            sum += value + 1;
            // return value + 2;
        })
        console.log(sum);
        // console.log(newArray1);

        //filter 筛选数组
        // var arr = [12, 66, 33,77, 88, 99];
        // var newArry = arr.filter(function (value, index) {
        //     // return value>=20;
        //     return value % 2 === 0;
        // })
        // console.log(newArry);

        // some 查找数组中是否有满足条件的元素
        // var arr = [10, 20, 30, 40];
        // var flag = arr.some(function (value) {
        //     // return value >= 20;
        //     return value < 3;
        // })
        // console.log(flag);
        // var arr1 = ['red', 'green', 'blue', 'pink','blue'];
        // var flag1 = arr1.some(function (value) {
        //     return value == 'green';
        // })
        // console.log(flag1);
        // filter 也是查找满足条件的元素 返回的是一个数组   而且是把所有满足条件的元素返回回来
        // some    也是查找满足条件的元素 是否存在   返回的是布尔值  如果查到第一个满足条件的元素就终止循环

        // map  遍历数组 返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。
    //    var arr3=[1,2,3,4,5,6];
    //    arr3.map(function(value){

    //    })

    </script>
</body>

</html>