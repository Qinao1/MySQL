<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    可以通过原型对象 对原来的内置对象进行扩展自定义的方法    比如给数组增加自定义求偶数和功能
    注意，数组和字符串内置对象 不能给原型对象覆盖操作 Array.prototype={}只能是Arrray.prototype.xxx=fucution(){}的方式
    <script>
        // 原型对象的应用 扩展内置对象方法
        // console.log(Array.prototype);
        Array.prototype.sum=function(){
            var sum=0;
            for (var i=0;i<this.length;i++){
                sum +=this[i];
            }
            return sum;
        }
        // 不能像下面那样写
        // Array.prototype = {
        //     sum: function () {
        //         var sum = 0;
        //         for (var i = 0; i < this.length; i++) {
        //             sum += this[i];
        //         }
        //         return sum;
        //     }
        // }
        var arr = [12, 1, 2, 3, 4];
        console.log(arr.sum());
        console.log(Array.prototype);
        var arr1 = new Array(11, 22, 33);
        console.log(arr1.sum());
        
    </script>
</body>

</html>